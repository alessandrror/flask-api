# Setup to initialize project structure

echo "[ `date` ]": "START"

echo "[ `date` ]": "creating virtual env"
python -m venv .venv/

echo "[ `date` ]": "activate venv"
source venv/bin/activate

echo "[ `date` ]": "installing the requirements"
pip install -r requirements.txt

echo "[ `date` ]": "adding folders and files"
python template.py

echo "[ `date` ]": "initializing the git repository"
git init

echo "[ `date` ]": "configurating git ignore file"
cat << EOF >> .gitignore
# Virtual enviroment directories
venv/
.venv/

# Cahe files
__pycache__/
*.pyc
*.o

# Local configuration files
.env
instance/
EOF

echo "[ `date` ]": "scaffolding project configs"
cat << EOF >> setup.cfg
[flake8]
extend-ignore = E203
exclude =
    # No need to traverse our git directory
    .git,
    # There's no value in checking cache directories
    __pycache__,
    # The conf file is mostly autogenerated, ignore it
    docs/source/conf.py,
    # The old directory contains Flake8 2.0
    old,
    # This contains our built documentation
    build,
    # This contains builds of flake8 that we don't want to check
    dist
max-complexity = 10
max-line-length = 120
EOF

cat << EOF >> .pre-commit-config.yaml
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
-   repo: https://github.com/psf/black-pre-commit-mirror
    rev: 25.1.0
    hooks:
    -   id: black
        language_version: python3.12.4
        args: ["--line-length=120"]
-   repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
    -   id: isort
        args: ["--profile", "black", "--filter-files"]
-   repo: https://github.com/pycqa/flake8
    rev: 7.2.0
    hooks:
    -   id: flake8
    additional_dependencies: [flake8-docstrings]
EOF

pre-commit install
pre-commit run --all-files


echo "[ `date` ]": "END"
